{
  "name": "gulp-jasmine-browser",
  "version": "0.1.0",
  "license": "MIT",
  "description": "[![Build Status](https://travis-ci.org/jasmine/gulp-jasmine-browser.svg?branch=master)](https://travis-ci.org/jasmine/gulp-jasmine-browser)",
  "keywords": [
    "gulp",
    "gulpplugin",
    "jasmine",
    "test",
    "testing",
    "spec"
  ],
  "homepage": "https://github.com/jasmine/gulp-jasmine-browser",
  "bugs": {
    "url": "https://github.com/jasmine/gulp-jasmine-browser/issues"
  },
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/jasmine/gulp-jasmine-browser"
  },
  "devDependencies": {
    "babel": "^5.2.17",
    "babel-eslint": "^3.1.1",
    "cheerio": "^0.18.0",
    "del": "^1.1.1",
    "eslint": "^0.20.0",
    "eslint-plugin-react": "^2.2.0",
    "gulp": "^3.8.11",
    "gulp-babel": "^5.1.0",
    "gulp-eslint": "^0.11.1",
    "gulp-header": "^1.2.2",
    "gulp-jasmine": "^2.0.1",
    "gulp-load-plugins": "^0.10.0",
    "gulp-plumber": "^1.0.0",
    "gulp-webpack": "^1.3.0",
    "jasmine": "^2.2.0",
    "merge-stream": "^0.1.7",
    "methods": "^1.1.1",
    "npm": "^2.9.1",
    "require-dir": "^0.3.0",
    "run-sequence": "^1.1.0",
    "selenium-standalone": "^4.2.0",
    "supertest": "git://github.com/visionmedia/supertest.git#bf2f5e7c55030b46995a85ada42c21d285f25716",
    "webdriverio": "^2.4.5"
  },
  "dependencies": {
    "babel-runtime": "^5.2.17",
    "es6-promisify": "^1.1.1",
    "express": "^4.12.2",
    "jasmine-core": "^2.2.0",
    "mime": "^1.3.4",
    "portfinder": "^0.4.0",
    "through2": "^1.1.1",
    "vinyl": "^0.4.6"
  },
  "peerDependencies": {
    "gulp": "^3.8.11",
    "gulp-util": "^3.0.4"
  },
  "scripts": {
    "test": "gulp"
  },
  "readme": "# gulp-jasmine-browser\n[![Build Status](https://travis-ci.org/jasmine/gulp-jasmine-browser.svg?branch=master)](https://travis-ci.org/jasmine/gulp-jasmine-browser)\n\n## Installing\n`gulp-jasmine-browser` is available as an\n[npm package](https://www.npmjs.com/package/gulp-jasmine-browser).\n\n## Usage\n\n### Create a Jasmine server to run specs in a browser\n\nIn `gulpfile.js`\n\n```js\nvar gulp = require('gulp');\nvar jasmineBrowser = require('gulp-jasmine-browser');\n\ngulp.task('jasmine', function() {\n  return gulp.src(['src/**/*.js', 'spec/**/*_spec.js'])\n    .pipe(jasmineBrowser.specRunner())\n    .pipe(jasmineBrowser.server());\n});\n```\nIn `gulp.src` include all files you need for testing other than jasmine itself.\nThis should include your spec files, and may also include your production JavaScript and\nCSS files.\n\n### Run jasmine tests headlessly\n\nIn `gulpfile.js`\n\n```js\nvar gulp = require('gulp');\nvar jasmineBrowser = require('gulp-jasmine-browser');\n\ngulp.task('jasmine-phantom', function() {\n  return gulp.src(['src/**/*.js', 'spec/**/*_spec.js'])\n    .pipe(jasmineBrowser.specRunner({console: true}))\n    .pipe(jasmineBrowser.phantomjs());\n});\n```\n\nNote the `{console: true}` passed into specRunner.\n\nGulpJasmineBrowser assumes that `phantomjs` is already installed and in your path.\nIt is only tested with PhantomJS 2.\n\n\n### Usage with Webpack\n\nIf you would like to compile your front end assets with Webpack, for example to use\ncommonjs style require statements, you can pipe the compiled assets into\nGulpJasmineBrowser.\n\nIn `gulpfile.js`\n\n```js\nvar gulp = require('gulp');\nvar jasmineBrowser = require('gulp-jasmine-browser');\nvar webpack = require('gulp-webpack');\n\ngulp.task('jasmine', function() {\n  return gulp.src('spec/**/*_spec.js'])\n    .pipe(webpack({watch: true, output: {filename: 'spec.js'}}))\n    .pipe(jasmineBrowser.specRunner())\n    .pipe(jasmineBrowser.server());\n});\n```\n\nWhen using webpack, it is helpful to delay the jasmine server when the webpack bundle becomes invalid (to prevent serving\njavascript that is out of date).  Adding the plugin to your webpack configuration, and adding the whenReady function to\nthe server configuration enables this behavior. \n\n```js\nvar gulp = require('gulp');\nvar jasmineBrowser = require('gulp-jasmine-browser');\nvar webpack = require('gulp-webpack');\n\ngulp.task('jasmine', function() {\n  var JasminePlugin = require('gulp-jasmine-browser/webpack/jasmine-plugin');\n  var plugin = new JasminePlugin();\n  return gulp.src('spec/**/*_spec.js'])\n    .pipe(webpack({watch: true, output: {filename: 'spec.js'}, plugins: [plugin]}))\n    .pipe(jasmineBrowser.specRunner())\n    .pipe(jasmineBrowser.server({whenReady: plugin.whenReady}));\n});\n```\n\n## Development\n### Getting Started\nThe application requires the following external dependencies:\n* [Node](https://nodejs.org/)\n* [Gulp](http://gulpjs.com/)\n* [PhantomJS](http://phantomjs.org/) - if you want to run tests with Phantom, see your options under 'Usage.'\n\nThe rest of the dependencies are handled through:\n```bash\nnpm install\n```\n\nRun tests with:\n```bash\nnpm test\n```\n\n(c) Copyright 2015 Pivotal Software, Inc. All Rights Reserved.\n",
  "readmeFilename": "README.md",
  "_id": "gulp-jasmine-browser@0.1.0",
  "dist": {
    "shasum": "3a74f59cc874e03d17d5fc991e4a9eefd0f053f0"
  },
  "_from": "gulp-jasmine-browser@",
  "_resolved": "https://registry.npmjs.org/gulp-jasmine-browser/-/gulp-jasmine-browser-0.1.0.tgz"
}
